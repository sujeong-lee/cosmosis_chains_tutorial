;***********************************
;multinest is the default sampler
;***********************************
[runtime]
sampler = test
root = ${COSMOSIS_SRC_DIR}

[DEFAULT]
BASELINE_DIR= .
RUN_NAME = XXX
PROBE = gc_ggl_shear
planck_like_path=${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/
;planck_like_path=/n/des/lee.5922/data/planck_lik_data/plc_2.0/
2PT_FILE = ../simulated_data/simulated_3x2pt_baseline.fits
2PT_DATA_SETS=shear_xi_plus shear_xi_minus galaxy_shear_xi galaxy_xi

[test]
; These are the parameters for this sampler.
; In this case there is just one parameter
save_dir=../output/output_%(RUN_NAME)s/test_output_%(PROBE)s
fatal_errors=T


[output]
filename=../output/output_%(RUN_NAME)s/emcee/%(PROBE)s_chain
;filename=../output/output_%(RUN_NAME)s/fisher/boss_chain
;format=text
;lock=F
;

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
; Here we just specify the priors, since modules and values will be specific to each chain
[pipeline]
quiet=F
timing=F
debug=F
priors = priors.ini
modules = consistency camb halofit growth extrapolate fits_nz lens_photoz_bias source_photoz_bias unbiased_galaxies bias_neutrinos multiply_pk IA ia_z_field pk_to_cl bin_bias add_intrinsic shear_m_bias 2pt_shear 2pt_gal_shear 2pt_gal 2pt_like
values = values.ini
likelihoods = 2pt
extra_output = cosmological_parameters/sigma_8


[IA]
file=cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
do_galaxy_intrinsic=T
method=bk_corrected
;file=${COSMOSIS_SRC_DIR}/cosmosis-des-library/IAs/simple_red_blue/simple_red_blue_interface.py
;name_1=red
;name_2=blue

[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
shear-shear=T
perbin=F
position-shear=T

[stitch]
; This module combines together the 
file=${COSMOSIS_SRC_DIR}/cosmosis-des-library/IAs/stitch/stitch_ia.py
name_1=red
name_2=blue

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py



[camb_2]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2650
feedback=0
kmin=1e-5
kmax=10.0
nk=200
do_lensing = T
do_tensors = T
do_nonlinear = T
high_ell_template = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
accuracy_boost=1.1
high_accuracy_default = T


[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2560
feedback=0
kmin=1e-5
kmax=10.0
nk=90
do_lensing = T
do_tensors = F
do_nonlinear = T
high_ell_template = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
accuracy_boost=1.0
high_accuracy_default = T
;zmin=0.0
;zmax=4.0
;nz=15


[extrapolate]
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py 
kmax = 500.

[sigma8_rescale]
file = cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so
nk=700
;nk = 10001


[unbiased_galaxies]
file = cosmosis-standard-library/bias/no_bias/no_bias.py

; This module uses the Limber approximation to compute shear-shear C_ell
; given the shear kernel (which is derived from the number density and 
; from geometry)

[pk_to_cl]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 0.1
ell_max = 5.0e5
n_ell = 400
position-shear = lens-source
shear-shear = source-source
position-position = lens-lens
intrinsic-intrinsic = source-source
shear-intrinsic = source-source
position-intrinsic = lens-source
verbose = F
get_kernel_peaks=F



[fits_nz]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = source lens
prefix_section = T
prefix_extension = T


[ia_z_field]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/intrinsic_alignments/z_powerlaw/ia_z_powerlaw.py
do_galaxy_intrinsic = T

[save_c_ell_fits]
file = cosmosis-des-library/tcp/2pt_like/save_2pt.py.su
ell_min = 100.0
ell_max = 2000.0
n_ell = 10
shear_nz_name = nz_source
position_nz_name = nz_lens
filename = internal_simulation.fits
clobber = T
number_density_shear_bin =  2.0  2.0  2.0  2.0  2.0
number_density_lss_bin = 2.0  2.0  2.0
sigma_e_bin = 0.2  0.2  0.2  0.2  0.2
survey_area = 1500.0



[bin_bias]
file = cosmosis-standard-library/bias/binwise_bias/bin_bias.py
perbin=T


[unbiased_galaxies]
file = cosmosis-standard-library/bias/no_bias/no_bias.py
use_lin_power=False



[2pt_shear]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
;input_section_name = shear_cl
;output_section_name = shear_xi
corr_type = 0

[2pt_gal_fullsky]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
corr_type = 2
ell_max = 40000
xi_type='00'
n_theta=50

[2pt_gal_shear]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
;input_section_name = galaxy_shear_cl
;output_section_name = ggl_xi
; Type of Hankel transform and output correlation function
; [0 = shear, 1 = matter, 2 = ggl]
corr_type = 2

[2pt_gal]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
;input_section_name = galaxy_cl
;output_section_name = matter_xi
; Type of Hankel transform and output correlation function
; [0 = shear, 1 = matter, 2 = ggl]
corr_type = 1


[shear_m_bias]
file = cosmosis-standard-library/shear/shear_bias/shear_m_bias.py
m_per_bin = True
verbose = F

[source_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = wl_photoz_errors
interpolation = linear

[lens_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_lens
bias_section = lens_photoz_errors
interpolation = linear


[growth]
file=cosmosis-standard-library/structure/growth_factor/interface.so
zmin=0.
zmax=4.
nz=401

[extract]
file = ${PWD}/datavector.py
outfile = datavector.txt

[bias_neutrinos]
file=cosmosis-des-library/lss/braganca-neutrino-bias/interface.so
feedback=false
; --------------------------------------------------
; GROWTH FUNCTION
LINEAR_GROWTH_EPS_ABS = 0.0
LINEAR_GROWTH_EPS_REL = 1.0e-6
LINEAR_GROWTH_RK_TYPE = RK45
; LINEAR_GROWTH_SPLINE_ZMIN: ZMIN NEED TO BE ZERO
LINEAR_GROWTH_SPLINE_ZMIN = 0.0
LINEAR_GROWTH_SPLINE_ZMAX = 1.00
LINEAR_GROWTH_SPLINE_DELTA_Z = 0.02
; --------------------------------------------------

[multiply_pk]
file=cosmosis-des-library/lss/braganca-neutrino-bias/bias_pks.py



;;;;;;;; likelihood ;;;;;;;;;;;;;;

[2pt_like_allscales]
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
include_norm=T
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
make_covariance=F
covmat_name=COVMAT


[2pt_like]
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
include_norm = T
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
make_covariance = F
covmat_name = COVMAT
angle_range_shear_xi_plus_1_1 = 7.195005 250.0
angle_range_shear_xi_plus_1_2 = 7.195005 250.0
angle_range_shear_xi_plus_1_3 = 5.715196 250.0
angle_range_shear_xi_plus_1_4 = 5.715196 250.0
angle_range_shear_xi_plus_2_1 = 7.195005 250.0
angle_range_shear_xi_plus_2_2 = 4.539741 250.0
angle_range_shear_xi_plus_2_3 = 4.539741 250.0
angle_range_shear_xi_plus_2_4 = 4.539741 250.0
angle_range_shear_xi_plus_3_1 = 5.715196 250.0
angle_range_shear_xi_plus_3_2 = 4.539741 250.0
angle_range_shear_xi_plus_3_3 = 3.606045 250.0
angle_range_shear_xi_plus_3_4 = 3.606045 250.0
angle_range_shear_xi_plus_4_1 = 5.715196 250.0
angle_range_shear_xi_plus_4_2 = 4.539741 250.0
angle_range_shear_xi_plus_4_3 = 3.606045 250.0
angle_range_shear_xi_plus_4_4 = 3.606045 250.0
angle_range_shear_xi_minus_1_1 = 90.579750 250.0
angle_range_shear_xi_minus_1_2 = 71.950053 250.0
angle_range_shear_xi_minus_1_3 = 71.950053 250.0
angle_range_shear_xi_minus_1_4 = 71.950053 250.0
angle_range_shear_xi_minus_2_1 = 71.950053 250.0
angle_range_shear_xi_minus_2_2 = 57.151958 250.0
angle_range_shear_xi_minus_2_3 = 57.151958 250.0
angle_range_shear_xi_minus_2_4 = 45.397414 250.0
angle_range_shear_xi_minus_3_1 = 71.950053 250.0
angle_range_shear_xi_minus_3_2 = 57.151958 250.0
angle_range_shear_xi_minus_3_3 = 45.397414 250.0
angle_range_shear_xi_minus_3_4 = 45.397414 250.0
angle_range_shear_xi_minus_4_1 = 71.950053 250.0
angle_range_shear_xi_minus_4_2 = 45.397414 250.0
angle_range_shear_xi_minus_4_3 = 45.397414 250.0
angle_range_shear_xi_minus_4_4 = 36.060448 250.0

angle_range_galaxy_shear_xi_1_1 = 27.0 250.0
angle_range_galaxy_shear_xi_1_2 = 27.0 250.0
angle_range_galaxy_shear_xi_1_3 = 27.0 250.0
angle_range_galaxy_shear_xi_1_4 = 27.0 250.0
;angle_range_galaxy_shear_xi_1_1 = 27.24 250.0
;angle_range_galaxy_shear_xi_1_2 = 27.24 250.0
;angle_range_galaxy_shear_xi_1_3 = 27.24 250.0
;angle_range_galaxy_shear_xi_1_4 = 27.24 250.0
angle_range_galaxy_xi_1_1 = 20.0 250.0

angle_range_gammat_1_1 = 64.0 250.0
;angle_range_gammat_1_2 = 64.0 250.0
;angle_range_gammat_1_3 = 64.0 250.0
;angle_range_gammat_1_4 = 64.0 250.0
;angle_range_gammat_2_1 = 40.0 250.0
;angle_range_gammat_2_2 = 40.0 250.0
;angle_range_gammat_2_3 = 40.0 250.0
;angle_range_gammat_2_4 = 40.0 250.0
;angle_range_gammat_3_1 = 30.0 250.0
;angle_range_gammat_3_2 = 30.0 250.0
;angle_range_gammat_3_3 = 30.0 250.0
;angle_range_gammat_3_4 = 30.0 250.0
;angle_range_gammat_4_1 = 24.0 250.0
;angle_range_gammat_4_2 = 24.0 250.0
;angle_range_gammat_4_3 = 24.0 250.0
;angle_range_gammat_4_4 = 24.0 250.0
;angle_range_gammat_5_1 = 21.0 250.0
;angle_range_gammat_5_2 = 21.0 250.0
;angle_range_gammat_5_3 = 21.0 250.0
;angle_range_gammat_5_4 = 21.0 250.0
;angle_range_wtheta_1_1 = 43.0 250.0
;angle_range_wtheta_2_2 = 27.0 250.0
;angle_range_wtheta_3_3 = 20.0 250.0
;angle_range_wtheta_4_4 = 16.0 250.0
;angle_range_wtheta_5_5 = 14.0 250.0



[planck_tt_highell]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
;;;;Lite high-ell TT
;data_1 = %(planck_like_path)s/hi_l/plik_lite/plik_lite_v18_TT.clik
data_1 = %(planck_like_path)s/data/plik_lite_v18_TT.clik/

;;;;Planck likelihood 2015;;;;
[planck]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
;;;;Lite high-ell TT
data_1 = %(planck_like_path)s/plik_lite_v18_TT.clik
;;;;Low-ell  TT,EE, BB and TE likelihood
data_2 = %(planck_like_path)s/commander_rc2_v1.1_l2_29_B.clik

[planck_lensing]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
;;;;T and P lensing likelihood
lensing_1 = %(planck_like_path)s/lensing/smica_g30_ftl_full_pttptt.clik_lensing

[planck_all]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
data_1 = %(planck_like_path)s/hi_l/plik_lite/plik_lite_v18_TT.clik
data_2 = %(planck_like_path)s/low_l/bflike/lowl_SMW_70_dx11d_2014_10_03_v5c_Ap.clik
lensing_1 = %(planck_like_path)s/lensing/smica_g30_ftl_full_pttptt.clik_lensing



;;;;BAO likelihoods;;;;
[boss_dr12]
file = ${COSMOSIS_SRC_DIR}/cosmosis-des-library/external/bao/boss_dr12/boss_dr12.py
;mode = 0: BAO. mode = 1: BAO + FS (measurement of fsig8 included).
mode = 1

[boss_rsd]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/boss/boss_rsd.py
;mode = 0: BAO. mode = 1: BAO + FS (measurement of fsig8 included).
mode = 1




;;;;;;;;;;;;;; Sampler ;;;;;;;;;;;;;;;;;;;;;

[multinest]
max_iterations=50000
multinest_outfile_root=output_%(RUN_NAME)s/multinest/mn_%(RUN_NAME)s_%(PROBE)s_
resume=F
; only for debugging
;live_points = 250
;efficiency = 0.3
;tolerance = 0.1
;constant_efficiency = F
;;
; better results 
live_points = 675
efficiency = 0.1
tolerance = 0.1
constant_efficiency = F
; from Joe:- For a quick run:
;live_points=250
;efficiency=0.8
;tolerance=0.1
;constant_efficiency=F
;update_interval=1
;    ~ 140k evaluations
;    ~ 9k independent samples
;    Few enough samples that the plots will be too scrappy to use in publications.
;    Estimated mean and covmat will still be good to a few percent
;    Evidence will be a bit off compared to other estimates.
;- Suggested standard run:
;live_points=500
;efficiency=0.3
;tolerance=0.1
;constant_efficiency=F
;    ~ 350k evaluations
;    ~ 20k independent samples
;    Plots should be fine with some small smoothing or Schuhman's transformation.
;    Reasonable evidence
;- A mega-run:
;    live_points=1000
;    efficiency=0.05
;    tolerance=0.1
;    constant_efficiency=T
;    ~ 1M evaluations
;    ~ 40k independent samples
;    Switching on constant_efficiency speeds up from ~1M samples to ~600k
;    Should only need one or two of these for comparison.

[grid]
nsample_dimension = 10
save_dir=grid_output

[emcee]
; The emcee sampler uses the concept of walkers, a collection
; ; ; of live points.  Sampling is done along lines that connect
; ; ; pairs of walkers.  The number of walkers must be at least
; ; ; 2*nparam + 1, but in general more than that usually works
; ; ; better.
burn=0
walkers = 254
; This many samples is overkill, just to make the plots
; look a lot nicer
samples = 10000
;100000
;;1000000
; ; ; This is the interval at which convergence diagnostics
; ; ; are performed
nsteps = 1
;covmat = ../data/cov_mcal4_cmass1.cosmosis.cov
; ;
;
;
; ; The pipeline section contains information
; ; that describes the sequence of calculations
; ; to be done and what we want out at the end
; ; Here we just specify the priors, since modules and values will be specific to each chain
